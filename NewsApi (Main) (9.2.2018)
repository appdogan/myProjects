package com.example.casper.news;

import android.annotation.SuppressLint;
import android.content.res.ColorStateList;
import android.graphics.Color;
import android.os.AsyncTask;
import android.support.design.widget.CollapsingToolbarLayout;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

import com.squareup.picasso.Picasso;

import org.json.JSONArray;
import org.json.JSONObject;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity  {


     TextView text;


    ListView listView;

    knowledge knowledge;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);



//        final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
  //   setSupportActionBar(toolbar);

       getSupportActionBar().setDisplayHomeAsUpEnabled(true);





        new MainActivity.AsyncHttpTask().execute();

    }




    public class AsyncHttpTask extends AsyncTask<String, Void, List<String>> {
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
        }

        HttpURLConnection urlConnection = null;

        List<String> title = new ArrayList<>();

        ImageView image = findViewById(R.id.picture);


        Adapter adapter;

        @SuppressLint("ResourceAsColor")
        @Override
        protected void onPostExecute(List<String> result) {    //Arka planda yapılan işlerden buraya veri gönderilir.  Buradan ekran arayüzünde değişiklik yapılır.
            super.onPostExecute(result);
            CollapsingToolbarLayout collaps = (CollapsingToolbarLayout) findViewById(R.id.collapse_toolbar);






            RecyclerView recyclerView = findViewById(R.id.recycler);

            recyclerView.setHasFixedSize(true);

            LinearLayoutManager llm = new LinearLayoutManager(getApplicationContext());

            llm.setOrientation(LinearLayoutManager.VERTICAL);

            recyclerView.setLayoutManager(llm);




            try {


                collaps.setTitle("Live Stream");

                Picasso.with(getApplicationContext()).load(result.get(0)).into(image);





              //  collaps.setCollapsedTitleTextColor(R.color.orange);
                collaps.setExpandedTitleTextColor(ColorStateList.valueOf(Color.parseColor("#FFFFCC40")));

                collaps.setCollapsedTitleTextColor(Color.parseColor("#FFFFCC40"));
                recyclerView.setAdapter(adapter);




            }
             finally {


            }

            Log.e("TAG", "Gelen veri yok");

        }


        @Override
        protected List<String> doInBackground(String... urls) {   //Kullanıcı arayüzü etkilenmeden buradan arka plan işleri yapılır.

            String result = "";


            URL url = null;
            try {
                url = new URL("https://newsapi.org/v2/top-headlines?sources=google-news&apiKey=a2ac39d9b1f14fa8bc47b913f293fbf7");
                urlConnection = (HttpURLConnection) url.openConnection();
                InputStream input = null;
                input = new BufferedInputStream(urlConnection.getInputStream());
                BufferedReader read = new BufferedReader(new InputStreamReader(input));

                String line = "";

                StringBuffer sb = new StringBuffer();

                while ((line = read.readLine()) != null) {

                    sb.append(line + "\n");
                }




                result = sb.toString();


                JSONObject article = new JSONObject(result);

                JSONArray jsonArray = article.getJSONArray("articles");

                List<String> list= new ArrayList<>();


                List<String> picture = new ArrayList<>();


                ArrayList<knowledge> know = new ArrayList<>();


                for (int i = 0; i < jsonArray.length(); i++) {



                    JSONObject jsonObject = jsonArray.getJSONObject(i);




                    know.add(new knowledge(jsonObject.getString("title"),jsonObject.getString("urlToImage"),jsonObject.getString("url")));

                    adapter = new Adapter(know);
                    title.add(i,jsonObject.getString("title"));
                    picture.add(i,jsonObject.getString("urlToImage"));









                }


             //   list.addAll(picture);

                return picture;




            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            } catch (Exception e) {
                e.printStackTrace();
            }



            return null;

        }


    }




}
